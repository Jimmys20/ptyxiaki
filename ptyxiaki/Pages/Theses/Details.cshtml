@page
@model ptyxiaki.Pages.Theses.DetailsModel
@inject IAuthorizationService authorizationService

@{
  ViewData["Title"] = "Λεπτομέρειες";
}

<h1>@ViewData["Title"]</h1>

<div>
  <h4>Διπλωματική εργασία</h4>
  <hr />
  <dl class="row">
    <dt class="col-sm-2">
      @Html.DisplayNameFor(model => model.thesis.title)
    </dt>
    <dd class="col-sm-10">
      @Html.DisplayFor(model => model.thesis.title)&nbsp;
    </dd>
    <dt class="col-sm-2">
      @Html.DisplayNameFor(model => model.thesis.englishTitle)
    </dt>
    <dd class="col-sm-10">
      @Html.DisplayFor(model => model.thesis.englishTitle)&nbsp;
    </dd>
    <dt class="col-sm-2">
      @Html.DisplayNameFor(model => model.thesis.professor)
    </dt>
    <dd class="col-sm-10">
      <a asp-page="/Professors/Details" asp-route-id="@Model.thesis.professorId">@Html.DisplayFor(model => model.thesis.professor.fullName)</a>&nbsp;
    </dd>
    <dt class="col-sm-2">
      @Html.DisplayNameFor(model => model.thesis.status)
    </dt>
    <dd class="col-sm-10">
      @Html.DisplayFor(model => model.thesis.status)&nbsp;
    </dd>
    <dt class="col-sm-2">
      @Html.DisplayNameFor(model => model.thesis.semester)
    </dt>
    <dd class="col-sm-10">
      @Html.DisplayFor(model => model.thesis.semester.title)&nbsp;
    </dd>
    <dt class="col-sm-2">
      @Html.DisplayNameFor(model => model.thesis.createdAt)
    </dt>
    <dd class="col-sm-10">
      @Html.DisplayFor(model => model.thesis.createdAt)&nbsp;
    </dd>
    <dt class="col-sm-2">
      @Html.DisplayNameFor(model => model.thesis.assignmentType)
    </dt>
    <dd class="col-sm-10">
      @Html.DisplayFor(model => model.thesis.assignmentType)&nbsp;
    </dd>
    @if (Model.thesis.status >= Status.Active)
    {
      <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.thesis.assignedAt)
      </dt>
      <dd class="col-sm-10">
        @Html.DisplayFor(model => model.thesis.assignedAt)&nbsp;
      </dd>
      <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.thesis.assignments)
      </dt>
      <dd class="col-sm-10">
        <ul class="list-unstyled mb-0">
          @foreach (var student in Model.thesis.assignments.Select(a => a.student))
          {
            <li><a asp-page="/Students/Details" asp-route-id="@student.studentId">@Html.DisplayFor(model => student.fullName)</a></li>
          }
        </ul>
      </dd>
    }
    @if (Model.thesis.status == Status.Canceled)
    {
      <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.thesis.canceledAt)
      </dt>
      <dd class="col-sm-10">
        @Html.DisplayFor(model => model.thesis.canceledAt)&nbsp;
      </dd>
      <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.thesis.cancelReason)
      </dt>
      <dd class="col-sm-10">
        @Html.DisplayFor(model => model.thesis.cancelReason)&nbsp;
      </dd>
    }
    @if (Model.thesis.status == Status.Completed)
    {
      <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.thesis.completedAt)
      </dt>
      <dd class="col-sm-10">
        @Html.DisplayFor(model => model.thesis.completedAt)&nbsp;
      </dd>
    }
    <dt class="col-sm-2">
      @Html.DisplayNameFor(model => model.thesis.categorizations)
    </dt>
    <dd class="col-sm-10">
      <ul class="list-unstyled mb-0">
        @foreach (var category in Model.thesis.categorizations.Select(c => c.category))
        {
          <li>@Html.DisplayFor(model => category.title)</li>
        }
      </ul>
    </dd>
    <dt class="col-sm-2">
      @Html.DisplayNameFor(model => model.thesis.requirements)
    </dt>
    <dd class="col-sm-10">
      <ul class="list-unstyled mb-0">
        @foreach (var course in Model.thesis.requirements.Select(r => r.course))
        {
          <li>@Html.DisplayFor(model => course.title)</li>
        }
      </ul>
    </dd>
    <dt class="col-sm-2">
      @Html.DisplayNameFor(model => model.thesis.description)
    </dt>
    <dd class="col-sm-10">
      @Html.DisplayFor(model => model.thesis.description)&nbsp;
    </dd>
    <dt class="col-sm-2">
      @Html.DisplayNameFor(model => model.thesis.bibliography)
    </dt>
    <dd class="col-sm-10">
      @Html.DisplayFor(model => model.thesis.bibliography)&nbsp;
    </dd>
    <dt class="col-sm-2">
      @Html.DisplayNameFor(model => model.thesis.sources)
    </dt>
    <dd class="col-sm-10">
      @Html.DisplayFor(model => model.thesis.sources)&nbsp;
    </dd>
    <dt class="col-sm-2">
      @Html.DisplayNameFor(model => model.thesis.tools)
    </dt>
    <dd class="col-sm-10">
      @Html.DisplayFor(model => model.thesis.tools)&nbsp;
    </dd>
    <dt class="col-sm-2">
      @Html.DisplayNameFor(model => model.thesis.restrictions)
    </dt>
    <dd class="col-sm-10">
      @Html.DisplayFor(model => model.thesis.restrictions)&nbsp;
    </dd>
    @if (User.IsInRole(Globals.PROFESSOR_ROLE) && User.getUserId() == Model.thesis.professorId)
    {
      <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.thesis.declarations)
      </dt>
      <dd class="col-sm-10">
        <ul class="list-unstyled mb-0">
          @foreach (var student in Model.thesis.declarations.Select(d => d.student))
          {
            <li>
              <a asp-page="/Students/Details" asp-route-id="@student.studentId">@Html.DisplayFor(model => student.fullName)</a>
            </li>
          }
        </ul>
      </dd>
    }
  </dl>
</div>
<div>
  <a asp-page="./Index">Διπλωματικές εργασίες</a><br />
  @if ((await authorizationService.AuthorizeAsync(User, Model.thesis, Operations.Edit)).Succeeded)
  {
    <a asp-page="./Edit" asp-route-id="@Model.thesis.thesisId">Επεξεργασία</a><br />
  }
  @if ((await authorizationService.AuthorizeAsync(User, Model.thesis, Operations.Delete)).Succeeded)
  {
    <a asp-page="./Delete" asp-route-id="@Model.thesis.thesisId">Διαγραφή</a><br />
  }
  @if ((await authorizationService.AuthorizeAsync(User, Model.thesis, Operations.TransferToUnavailable)).Succeeded)
  {
    <a asp-page="./TransferToUnavailable" asp-route-id="@Model.thesis.thesisId">Μεταφορά στις μη διαθέσιμες</a><br />
  }
  @if ((await authorizationService.AuthorizeAsync(User, Model.thesis, Operations.TransferToAvailable)).Succeeded)
  {
    <a asp-page="./TransferToAvailable" asp-route-id="@Model.thesis.thesisId">Μεταφορά στις διαθέσιμες</a><br />
  }
  @if ((await authorizationService.AuthorizeAsync(User, Model.thesis, Operations.Complete)).Succeeded)
  {
    <a asp-page="./Complete" asp-route-id="@Model.thesis.thesisId">Ολοκλήρωση</a><br />
  }
  @if ((await authorizationService.AuthorizeAsync(User, Model.thesis, Operations.Cancel)).Succeeded)
  {
    <a asp-page="./Cancel" asp-route-id="@Model.thesis.thesisId">Ακύρωση</a><br />
  }
  @if ((await authorizationService.AuthorizeAsync(User, Model.thesis, Operations.Copy)).Succeeded)
  {
    <a asp-page="./Create" asp-route-id="@Model.thesis.thesisId">Αντιγραφή</a><br />
  }
  @if ((await authorizationService.AuthorizeAsync(User, Model.thesis, Operations.Declare)).Succeeded)
  {
    <form method="post" asp-page="/Students/Declarations" asp-page-handler="Add">
      <input type="hidden" name="id" value="@Model.thesis.thesisId" />
      <input type="submit" value="Προσθήκη στη δήλωση" class="btn btn-link p-0" />
    </form>
    <br />
  }
</div>
